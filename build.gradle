plugins {
    id 'org.unbroken-dome.test-sets' version '1.2.0'
}


group 'com.google.cloud.dataflow.sdk.io.kinesis'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'


sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
    mavenLocal()
}

testSets {
    integration
    e2e { extendsFrom integration }
}

integration {
    useTestNG()
    testLogging {
        showStandardStreams = true
    }
    outputs.upToDateWhen { false }
}

e2e {
    useTestNG()
    testLogging {
        showStandardStreams = true
    }
}

if (!project.hasProperty("dataflowVersion")) {
    ext.dataflowVersion = 'google'
}

def dataflowJarMap = ['google': 'com.google.cloud.dataflow:google-cloud-dataflow-java-sdk-all:1.5.0',
                      'apache': 'org.apache.beam:java-sdk-all:0.1.0-incubating-SNAPSHOT']

dependencies {
    compile dataflowJarMap.get(dataflowVersion)
    compile 'com.amazonaws:aws-java-sdk-kinesis:1.10.40'
    compile 'com.amazonaws:amazon-kinesis-client:1.6.1'

    e2eCompile 'com.jayway.awaitility:awaitility:1.7.0'
    e2eCompile 'com.google.apis:google-api-services-compute:v1-rev91-1.21.0'
    e2eCompile sourceSets.integration.output

    integrationCompile 'org.testng:testng:6.9.10'
    integrationCompile('com.amazonaws:amazon-kinesis-producer:0.10.2') {
        exclude module: 'aws-java-sdk-core'
    }
    integrationCompile 'org.slf4j:jul-to-slf4j:1.7.20'
    integrationCompile 'org.slf4j:slf4j-log4j12:1.7.20'
    integrationCompile 'com.amazonaws:aws-java-sdk-sts:1.10.40'
    integrationCompile 'log4j:log4j:1.2.17'


    testCompile 'org.easytesting:fest-assert:1.4'
    testCompile('org.mockito:mockito-core:1.10.19') {
        exclude module: 'hamcrest-core'
    }
    testCompile 'org.hamcrest:java-hamcrest:2.0.0.0'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

idea {
    module {
        testSourceDirs += file('src/integration/java')
        testSourceDirs += file('src/e2e/java')

        scopes.TEST.plus += [configurations.integrationCompile, configurations.integrationRuntime, configurations.e2eCompile, configurations.e2eRuntime]
    }
}